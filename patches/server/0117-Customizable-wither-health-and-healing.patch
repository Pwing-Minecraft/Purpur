From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: jmp <jasonpenilla2@me.com>
Date: Thu, 20 Aug 2020 17:38:12 -0700
Subject: [PATCH] Customizable wither health and healing

Adds the ability to customize the health of the wither, as well as the amount that it heals, and how often.

diff --git a/src/main/java/net/minecraft/server/EntityWither.java b/src/main/java/net/minecraft/server/EntityWither.java
index f68cf834aa65cc4bbb1eb9901586395d41770955..e8cc3af606f4874b6f32369f7f211f480670868b 100644
--- a/src/main/java/net/minecraft/server/EntityWither.java
+++ b/src/main/java/net/minecraft/server/EntityWither.java
@@ -145,6 +145,13 @@ public class EntityWither extends EntityMonster implements IRangedEntity {
         skull.setPositionRaw(headX, headY, headZ);
         world.addEntity(skull);
     }
+
+    public void initAttributes(World world) {
+        if (world != null) {
+            this.getAttributeInstance(GenericAttributes.MAX_HEALTH).setValue(world.purpurConfig.witherMaxHealth);
+            //setHealth(getMaxHealth()); // do NOT do this for wither! health grows when first spawned
+        }
+    }
     // Purpur end
 
     @Override
@@ -348,7 +355,7 @@ public class EntityWither extends EntityMonster implements IRangedEntity {
 
             this.setInvul(i);
             if (this.ticksLived % 10 == 0) {
-                this.heal(10.0F, EntityRegainHealthEvent.RegainReason.WITHER_SPAWN); // CraftBukkit
+                this.heal(this.getMaxHealth() / 33, EntityRegainHealthEvent.RegainReason.WITHER_SPAWN); // CraftBukkit // Purpur - use max health for healing instead of a constant
             }
 
         } else {
@@ -457,8 +464,10 @@ public class EntityWither extends EntityMonster implements IRangedEntity {
                 }
             }
 
-            if (this.ticksLived % 20 == 0) {
-                this.heal(1.0F, EntityRegainHealthEvent.RegainReason.REGEN); // CraftBukkit
+            // Purpur start - customizable heal rate and amount
+            if (this.ticksLived % world.purpurConfig.witherHealthRegenDelay == 0) {
+                this.heal(world.purpurConfig.witherHealthRegenAmount, EntityRegainHealthEvent.RegainReason.REGEN); // CraftBukkit
+                // Purpur end
             }
 
             //this.bossBattle.setProgress(this.getHealth() / this.getMaxHealth()); // Paper - Moved down
@@ -473,6 +482,7 @@ public class EntityWither extends EntityMonster implements IRangedEntity {
     public void beginSpawnSequence() {
         this.setInvul(220);
         this.setHealth(this.getMaxHealth() / 3.0F);
+        initAttributes(this.world); // Purpur - building the wither with soul_sand + wither_skeleton_skulls does not call prepare, so we need to call this manually
     }
 
     @Override
diff --git a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
index 1025b5daef29da23f1a80c1c0a1ef0eeee18384e..0f2e0e779198765a7dfa2d4c56b8b2ff8fb08f96 100644
--- a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
@@ -910,10 +910,21 @@ public class PurpurWorldConfig {
     public boolean witherRidable = false;
     public boolean witherRidableInWater = false;
     public double witherMaxY = 256D;
+    public float witherHealthRegenAmount = 1.0f;
+    public int witherHealthRegenDelay = 20;
+    public double witherMaxHealth = 300.0D;
     private void witherSettings() {
         witherRidable = getBoolean("mobs.wither.ridable", witherRidable);
         witherRidableInWater = getBoolean("mobs.wither.ridable-in-water", witherRidableInWater);
         witherMaxY = getDouble("mobs.wither.ridable-max-y", witherMaxY);
+        witherHealthRegenAmount = (float) getDouble("mobs.wither.health-regen-amount", witherHealthRegenAmount);
+        witherHealthRegenDelay = getInt("mobs.wither.health-regen-delay", witherHealthRegenDelay);
+        if (PurpurConfig.version < 8) {
+            double oldValue = getDouble("mobs.wither.max-health", witherMaxHealth);
+            set("mobs.wither.attributes.max-health", oldValue);
+            set("mobs.wither.max-health", null);
+        }
+        witherMaxHealth = getDouble("mobs.wither.attributes.max-health", witherMaxHealth);
     }
 
     public boolean witherSkeletonRidable = false;
